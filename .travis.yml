env:
  global:
    - REPO_DIR=gmpy2
    - PLAT=x86_64
    - UNICODE_WIDTH=32

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UPLOAD_SDIST=yes
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.3
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.3
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.4
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.3
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.4
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew uninstall gmp mpfr mpc; fi
  - if [ ! -z ${TRAVIS_TAG} ]; then export BUILD_COMMIT=${TRAVIS_TAG}; fi
  - if [ -z ${TRAVIS_TAG} ]; then cd gmpy2 && git pull origin master && export BUILD_COMMIT=`git rev-parse HEAD` && cd ..; fi
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  - before_install

install:
  # Maybe get and clean and patch source
  - clean_code $REPO_DIR $BUILD_COMMIT
  - build_wheel $REPO_DIR $PLAT

script:
  - install_run $PLAT
  - if [ $UPLOAD_SDIST == "yes" ]; then cp archives/* wheelhouse/; fi

deploy:
  provider: releases
  api-key:
    secure: "gpXpAkClw3+F1EuXeeNKHToY8Jjb52fkS9KDh8kdIAgNDoHiniMxSd0i/NJy48c4HDVuZ4y/KPKOlGXwvN9BOZ8Ms3+idIXNXxZtRqxNwu5VqL9HdxAFxt9HRQm3sgk3iTS6h3kJDNMNdGPk6C9bZ5GJscDUTXkYSEJ+ebiQfFj2klJ7UuNCYat8gWyP+9TVJKy18RQMLPoKo8jsnRFYRBaQKT7Rf9ocke7iea9WHBTsH9wg8hetfyZ/d3rDS0p0EapgcB4q+aNnZRU08euwEg2+aR5ARrWgn1ipVWfiPcxrsaknQoo7+6tUXa214mAYUC6ruMnBXdF2kBgtW3b9WWVh2dwD2YWfp39Q+Hd6YoseqipQRNvaPBfKr0LwZD71hKYjYFFOE7Qxku8IsaRYAyIvdT8yAnypGLt/ReuuzUrPnHO4JzWmo4F3Pmc4Atzai76Kw2bRBOKxyQ+l+L90Gevzv9u8prX1IMg4cKLv+vsu6a5pNRP2YA1dHmofMe+v+4YnEe2peeANCEnbFZ2UzcEEKWzO6VOfTY1JSLNDEUL827471DlM5n2z1ZINnSXRqat6HabspSXnl8E+3EKBLyB0HhqJAUV59eZjiy1HlXkQ4RXuPOVT3F4/XjEPh8awg022EYXql/Xytq4bYVty56GiTI+IrA5OhQ9pF4RjjQs="
  file_glob: true
  file: wheelhouse/*
  skip_cleanup: true
  on:
    tags: true
